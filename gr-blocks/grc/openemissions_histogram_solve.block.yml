id: openemissions_histogram_solve
label: Histogram Equation Solver
category: '[openemissions]'

templates:
    imports: import openemissions
    make: |-
        openemissions.histogram_solve_${freq_type.fnc}_${nvars}(
            ${min},
            ${max},
            lambda x1=0,x2=0,x3=0: eval(${expr}, locals(), globals()),
            ${unknown.idx},
            ${nbuckets}
        )

parameters:
-   id: freq_type
    label: Type
    dtype: enum
    default: "Float"
    options: ["UInt64", "Float", "Double"]
    option_attributes:
        fnc: ["u64", "f32", "f64"]
        type: [s64, f32, f64]
    hide: part
-   id: min
    label: Minimum
    dtype: real
-   id: max
    label: Maximum
    dtype: real
-   id: expr
    label: y0(x1,x2?,x3?) =
    dtype: string
    default: "x1 + x2"
-   id: nvars
    label: Knowns
    dtype: int
    default: 2
-   id: unknown
    label: Unknown
    dtype: enum
    default: 1
    options: ["y0", "x1", "x2", "x3"]
    option_attributes:
        idx: [0, 1, 2, 3]
-   id: extrema
    label: (y'=0)(x1,x2?,x3?) =
    dtype: string
    default: ""
-   id: nbuckets
    label: Histogram Vec Length
    dtype: int
    default: 1024

inputs:
-   label: Known
    domain: stream
    dtype: ${ freq_type.type }
    vlen: ${ nbuckets }
    multiplicity: ${nvars}

outputs:
-   label: Unknown
    domain: stream
    dtype: ${ freq_type.type }
    vlen: ${ nbuckets }

documentation: |-
    Solves a histogram equation for an unknown, producing
    histograms of possible values for the unknown.

    The inputs are assumed to be vectors produced by
    histogram blocks.  The inputs will be mapped to
    variables in the order "y0, x1, x2, x3", skipping
    the variable specified as an unknown.

    TODO:
    To identify all possible solutions, equation extrema
    must be specified: solutions for the equation that
    make its derivative equal to 0.  This parameter
    is labeled "(y'=0)(x1,x2?,x3?) =".  As many of these
    extrema may be given as desired, separated with commas.
    They are given as tuples or arrays of the possible
    value sets that make the derivative equal to zero.
    For example, for "y0 = x1^2 - 2x1 + x2^2", the correct
    extrema would be "(1, x2), (x1, 0)".  The first set,
    "(1, x2)" is the set of values that make dy/dx1 = 0,
    since dy0/dx1 = 2x1 - 2, so x1 = 1 for all x2.  The
    second set, "(x1, 0)" is the values that make dy/dx2 = 0,
    since dy/dx2 = 2x2, so x2 = 0 for all x1.  If extrema are
    left out or incorrect then a higher bucket count may be
    needed to include areas near them.


asserts:
-   ${ nvars >= 0 and nvars <= 3 }

file_format: 1
