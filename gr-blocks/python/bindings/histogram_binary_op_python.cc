/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(histogram_binary_op.h)                                     */
/* BINDTOOL_HEADER_FILE_HASH(21d5e4e987252b4ae8c13bfc4b038cc8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>

namespace py = pybind11;

#include <openemissions/histogram_binary_op.h>
// pydoc.h is automatically generated in the build directory
#include <histogram_binary_op_pydoc.h>

template <typename freq_type>
void bind_histogram_binary_op_template(py::module& m, const char* classname)
{

    using histogram_binary_op    = gr::openemissions::histogram_binary_op<freq_type>;


    py::class_<histogram_binary_op, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<histogram_binary_op>>(m, classname)

        .def(py::init(&histogram_binary_op::make),
           py::arg("min"),
           py::arg("max"),
           py::arg("op"),
           py::arg("nbuckets") = 1024,
           D(histogram_binary_op,make)
        ) ;
}

void bind_histogram_binary_op(py::module& m)
{
    bind_histogram_binary_op_template<double>(m, "histogram_binary_op_f64");
    bind_histogram_binary_op_template<float>(m, "histogram_binary_op_f32");
    bind_histogram_binary_op_template<uint64_t>(m, "histogram_binary_op_u64");
}
